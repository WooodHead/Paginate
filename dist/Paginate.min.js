/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (global, factory) {
    if (( false ? "undefined" : _typeof(module)) === "object" && _typeof(module.exports) === "object") {
        module.exports = factory(global);
    } else {
        factory(global);
    }
})(typeof window !== "undefined" ? window : undefined, function (window) {

    var __verison = 1.0;
    var tool = __webpack_require__(4);

    function Paginate(options, callBack) {

        var params = tool.extend({}, Paginate.default, options, { onClick: callBack });

        // create element
        Paginate.event.preClick = Paginate.event.click.bind(null, 'previousSibling', params);
        Paginate.event.nextClick = Paginate.event.click.bind(null, 'nextSibling', params);
        Paginate.event.itemClick = Paginate.event.click.bind(null, null, params);
        var obj = tool.createContanier(params);

        this.dom = obj.dom;
        this.preDom = obj.preDom;
        this.nextDom = obj.nextDom;
        this.options = params;

        this.optionsSet();

        if (params.contanier && params.contanier instanceof HTMLElement) params.contanier.appendChild(this.dom);
    }

    // when select change, adjustment UI layout
    Paginate.prototype.adjustment = function (selectNum) {
        if (selectNum) this.options.currentSelect = selectNum;
        Paginate.adjustment(this.dom, this.options);
    };

    // init options, and change options
    Paginate.prototype.optionsSet = function (params) {

        if (params && (typeof params === "undefined" ? "undefined" : _typeof(params)) === 'object') tool.extend(this.options, params);

        var cp = this.options.cursorPosition,
            dc = this.options.displayCount,
            select = this.options.currentSelect,
            total = this.options.totalPages;

        if (cp > dc || cp < 1) this.options.cursorPosition = 1;
        if (select > total) this.options.currentSelect = 1;

        if (this.options.data) {
            // local data
            var itemsCount = this.options.itemsCount;
            var reallyTotalPages = parseInt(this.options.data.length / this.options.itemsCount) + (this.options.data.length % this.options.itemsCount === 0 ? 0 : 1);

            if (this.options.totalPages === null || reallyTotalPages < this.options.totalPages) {
                this.options.totalPages = reallyTotalPages;
            }
        } else if (this.options.ajax || this.options.dataHandle) {
            // ajax data
            if (!this.options.itemsCount || !this.options.totalPages) throw new Error('in ajax type, you must set a value to itemsCount and totalPages!');
        } else {
            throw new Error('no data can be load!');
        }

        if (this.options.totalPages > 1) tool.addEl.call(this.options, this.dom, 1, this.options.totalPages);else if (this.options.totalPages === 1) too.addEl.call(this.options, this.dom, 1);else {
            this.preDom.removeEventListener('click', Paginate.event.preClick);
            this.nextDom.removeEventListener('click', Paginate.event.nextClick);
            return;
        };

        // adjustment
        Paginate.adjustment(this.dom, this.options);

        // dispatch 1 event
        var e = document.createEvent('Event');
        e.initEvent('click', true, true);
        this.dom.children[this.options.currentSelect].dispatchEvent(e);
    };

    Paginate.adjustment = function (dom, options) {
        var activePageNum = [];
        var current = options.currentSelect,
            max = options.totalPages,
            displayNum = options.displayCount,
            indexNum = options.cursorPosition,
            leftNum = options.leftCount,
            rightNum = options.rightCount;

        if (!/^\d+$/g.test(current.toString())) throw new Error("adjustment fail");

        // clear all child
        for (var i = 1, len = dom.children.length - 1; i < len; i++) {
            dom.removeChild(dom.children[1]);
        }

        if (leftNum + displayNum + rightNum >= max) {

            // display all
            for (var _i = 1; _i <= max; _i++) {
                activePageNum.push(_i);
            }
        } else {
            for (var _i2 = current + 1 - indexNum; _i2 <= current; _i2++) {
                activePageNum.push(_i2);
            }for (var _i3 = 0; _i3 < displayNum - indexNum; _i3++) {
                activePageNum.push(current + _i3 + 1);
            }if (activePageNum[0] <= leftNum + 1) {

                // type 1
                activePageNum.splice(0);
                for (var _i4 = 1; _i4 <= displayNum + leftNum; _i4++) {
                    activePageNum.push(_i4);
                }activePageNum.push(options.omittString);

                for (var _i5 = rightNum - 1; _i5 >= 0; _i5--) {
                    activePageNum.push(max - _i5);
                }
            } else if (activePageNum[0] > leftNum + 1 && activePageNum[activePageNum.length - 1] < max - rightNum) {

                //type 2
                activePageNum.unshift(options.omittString);
                for (var _i6 = leftNum; _i6 >= 1; _i6--) {
                    activePageNum.unshift(_i6);
                }activePageNum.push(options.omittString);
                for (var _i7 = rightNum - 1; _i7 >= 0; _i7--) {
                    activePageNum.push(max - _i7);
                }
            } else if (activePageNum[activePageNum.length - 1] >= max - rightNum) {

                //type 3
                activePageNum.splice(0);
                for (var _i8 = max; _i8 >= max - displayNum - rightNum + 1; _i8--) {
                    activePageNum.unshift(_i8);
                }activePageNum.unshift(options.omittString);

                for (var _i9 = leftNum; _i9 >= 1; _i9--) {
                    activePageNum.unshift(_i9);
                }
            }
        }
        activePageNum.unshift(dom);
        tool.addEl.apply(options, activePageNum);
        tool.find(dom.children, function (d) {
            return d.textContent === current.toString();
        }).className = 'tabItem tabClick';
    };

    Paginate.event = {
        click: function click(attr, options) {
            var target = event.srcElement || event.target;
            var clickEl = void 0,
                dom = target.parentNode;

            // disable `pre` or `next` when user click first or last
            var disablePreOrNext = function disablePreOrNext(targetParam) {

                dom.firstChild.removeEventListener('click', Paginate.event.preClick);
                dom.lastChild.removeEventListener('click', Paginate.event.nextClick);

                if (targetParam.textContent === '1') dom.firstChild.className = 'tabItem tabFlag disable';else {
                    dom.firstChild.className = 'tabItem tabFlag';
                    dom.firstChild.addEventListener('click', Paginate.event.preClick);
                }

                if (targetParam.textContent === dom.children[dom.children.length - 2].textContent) dom.lastChild.className = 'tabItem tabFlag tabNext disable';else {
                    dom.lastChild.className = 'tabItem tabFlag tabNext';
                    dom.lastChild.addEventListener('click', Paginate.event.nextClick);
                }
            };

            var now = tool.find(dom.children, function (o) {
                return o.className.indexOf('tabClick') !== -1;
            });

            disablePreOrNext(target);
            if (!attr) {
                clickEl = target;
            } else {
                clickEl = now[attr];
                disablePreOrNext(clickEl);
            }

            options.currentSelect = parseInt(clickEl.textContent);
            Paginate.adjustment(target.parentNode, options);

            // the now.addEventListener must in front of clickEl.removeEventListener
            // because some time now === clickEl
            now.addEventListener('click', Paginate.event.itemClick);
            clickEl.removeEventListener('click', Paginate.event.itemClick);

            if (options.dataHandle) {
                var callBack = function callBack(data) {
                    options.onClick(data);
                    Paginate.adjustment(dom, options);
                };
                options.dataHandle(clickEl.textContent, options, callBack, tool.http);
            } else if (options.ajax) {

                var url = tool.resolveUrl(options.ajax, clickEl.textContent, options.itemsCount);

                if (options.onAjaxRequestting) options.onAjaxRequestting();
                tool.http(options.ajaxMethod, url, options.ajaxData).then(function (data) {
                    if (data[options.ajaxDataName]) options.onClick(data[options.ajaxDataName]);else options.onClick(data);

                    if (data[options.ajaxTotalPagesName]) {
                        options.totalPages = parseInt(data[options.ajaxTotalPagesName]);
                        Paginate.adjustment(dom, options);
                    }
                }).catch(function (data) {
                    options.onAjaxFail(data);
                });
            } else if (options.data && options.itemsCount) {

                var pageNum = parseInt(clickEl.textContent);
                var dataIndex = options.itemsCount * (pageNum - 1);

                var data = options.data.slice(dataIndex, dataIndex + options.itemsCount);
                options.onClick(data);
            } else {
                throw new Error('no data can be load');
            }
        }
    };

    Paginate.default = {
        ajaxMethod: 'GET',
        ajaxData: null,
        ajaxTotalPagesName: 'totalPages',
        ajaxDataName: 'data',
        dataHandle: null,
        onAjaxFail: null,
        onAjaxRequestting: null,
        omittString: '···',
        preString: 'Pre',
        nextString: 'Next',
        displayCount: 5,
        cursorPosition: 3,
        leftCount: 1,
        rightCount: 1,
        itemsCount: null,
        totalPages: null,
        onClick: null,
        contanier: null,
        currentSelect: 1
    };

    window.Paginate = Paginate;

    return Paginate;
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(5);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(7)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../node_modules/_css-loader@0.21.0@css-loader/index.js!./paginate.css", function() {
			var newContent = require("!!../node_modules/_css-loader@0.21.0@css-loader/index.js!./paginate.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var ajaxModule = {

    // ajax package(only support XHR)
    http: function http(method, url, data, header) {
        return new Promise(function (resolve, reject) {
            var options = ajaxModule.httpDataResolve(method, url, data);
            var http = new XMLHttpRequest();

            http.onload = function () {
                resolve(JSON.parse(http.responseText));
            };
            http.onerror = function () {
                reject(JSON.parse(http.responseText));
            };

            http.open(method, options.url);
            if (options.hasContent) http.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

            if (header) {
                for (var i in header) {
                    http.setRequestHeader(i, header[i]);
                }
            }
            http.send(options.dataParam || null);
        });
    },

    // reslove data for ajax request
    httpDataResolve: function httpDataResolve(method, url, data) {

        var hasContent = void 0,
            dataParam = '';
        var index = url.indexOf('?');

        if (index !== -1) {
            url = url.replace(url.slice(index + 1), url.slice(index + 1).split('&').map(function (param) {
                return param.split('=').map(function (item) {
                    return encodeURIComponent(item);
                }).join('=');
            }).join('&'));
        }

        if (method.toLowerCase() === 'get') hasContent = false;else hasContent = true;

        if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && !data.isPrototypeOf(FormData)) {

            for (var item in data) {
                if (data[item] instanceof Array) {
                    for (var arrays in data[item]) {
                        dataParam += encodeURIComponent(item) + '=' + encodeURIComponent(data[item][arrays]) + '&';
                    }
                } else {
                    dataParam += encodeURIComponent(item) + '=' + encodeURIComponent(data[item]) + '&';
                }
            }
            dataParam = dataParam.substring(0, dataParam.length - 1);
        } else if (typeof data === 'string') {

            dataParam = data.split('&').map(function (param) {
                return param.split('=').map(function (item) {
                    return encodeURIComponent(item);
                }).join('=');
            }).join('&');
        }

        if (!hasContent && dataParam && index !== -1) url = [url, dataParam].join('&');else if (!hasContent && dataParam) url = url + '?' + dataParam;

        return {
            url: url,
            data: hasContent ? dataParam : null,
            hasContent: hasContent
        };
    }
};

module.exports = ajaxModule;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(1);
__webpack_require__(0);

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var tool = {

    //resolve ajax url
    resolveUrl: function resolveUrl(url, num, count) {
        return url.replace('{num}', num).replace('{count}', count);
    },

    // create contanier
    createContanier: function createContanier(params) {
        var con = tool.createHtml('div', 'tab');
        var pre = tool.createHtml(con, 'div', 'tabItem tabFlag');
        var next = tool.createHtml(con, 'div', 'tabItem tabFlag tabNext');

        pre.textContent = params.preString;
        next.textContent = params.nextString;

        pre.addEventListener('click', Paginate.event.preClick);
        next.addEventListener('click', Paginate.event.nextClick);

        return {
            dom: con,
            preDom: pre,
            nextDom: next
        };
    },

    // add element to paginate contanier
    // the contanier already have the `pre` and `next` element
    addEl: function addEl(contanier) {
        var self = this;
        if (!contanier || !(contanier instanceof HTMLElement)) return;

        for (var i = 1, len = arguments.length; i < len; i++) {
            if (typeof arguments[i] === 'number') {
                var el = tool.createHtml('div', 'tabItem');
                el.textContent = arguments[i];
                el.addEventListener('click', Paginate.event.itemClick);
                contanier.insertBefore(el, contanier.lastChild);
            } else if (arguments[i] === self.omittString) {
                var _el = tool.createHtml('div', 'tabItem disable');
                _el.textContent = arguments[i];
                contanier.insertBefore(_el, contanier.lastChild);
            }
        }
    },

    // merge object, don't support array
    extend: function extend() {
        var target = arguments[0] || {};

        for (var i = 1, len = arguments.length; i < len; i++) {
            if (_typeof(arguments[i]) !== 'object') continue;

            for (var obj in arguments[i]) {
                target[obj] = arguments[i][obj];
            }
        }

        return target;
    },

    createHtml: function createHtml() {
        if (!arguments.length) return;

        if (arguments.length === 1 && typeof arguments[0] === 'string') var c = document.createElement(arguments[0]);else if (arguments.length === 2) {

            if (arguments[0] instanceof HTMLElement) var argumentindex = 1;else if (typeof arguments[1] === 'string') var argumentindex = 0;else if (_typeof(arguments[1]) === 'object') var argumentindex = 0;else throw new Error('uncheck arguments!');

            c = document.createElement(arguments[argumentindex]);
            if (argumentindex) arguments[0].appendChild(c);else if (typeof arguments[1] === 'string') c.setAttribute('class', arguments[1]);else for (var key in arguments[1]) {
                c.setAttribute(key, arguments[1][key]);
            }
        }

        // arguments has 3
        else if (arguments.length === 3) {
                c = document.createElement(arguments[1]);
                arguments[0].appendChild(c);

                // if argument[2] is object type
                if (_typeof(arguments[2]) === 'object') {
                    for (var key in arguments[2]) {
                        c.setAttribute(key, arguments[2][key]);
                    }
                } else c.setAttribute('class', arguments[2]);
            } else throw new Error('uncheck arguments!');

        return c;
    },

    find: function find(array, callback) {
        for (var i in array) {
            if (callback(array[i])) return array[i];
        }
        return undefined;
    }
};

var http = __webpack_require__(2);
module.exports = tool.extend({}, tool, http);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(6)();
// imports


// module
exports.push([module.i, ".tab {\r\n    display: flex;\r\n}\r\n\r\n.tabFlag {\r\n    font-weight: bold;\r\n    border-top-left-radius: 3px;\r\n    border-bottom-left-radius: 3px;\r\n}\r\n\r\n.tabNext {\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border-top-right-radius: 3px;\r\n    border-bottom-right-radius: 3px;\r\n    border-right: 1px solid #e1e4e8 !important;\r\n}\r\n\r\n.tabFlag:hover {\r\n    background-color: #e7e7e7;\r\n    border-color: #e1e4e8;\r\n}\r\n\r\n.tabItem {\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    background-color: rgb(255, 255, 255);\r\n    padding: 7px 12px;\r\n    color: #0366d6;\r\n    flex-flow: nowrap;\r\n    border-right: none;\r\n    border-left: 1px solid #e1e4e8;\r\n    border-top: 1px solid #e1e4e8;\r\n    border-bottom: 1px solid #e1e4e8;\r\n    margin-left: 0px;\r\n    cursor: pointer;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n}\r\n\r\n    .tabItem:hover {\r\n        background-color: #e7e7e7;\r\n        border-color: #e1e4e8;\r\n    }\r\n\r\n.disable, .disable:hover {\r\n    color: #d3d3d3;\r\n    cursor: default;\r\n    background-color: #fafbfc;\r\n}\r\n\r\n.tabClick, .tabClick:hover {\r\n    background-color: #0366d6;\r\n    border-color: #0366d6;\r\n    color: #fff;\r\n}\r\n", ""]);

// exports


/***/ }),
/* 6 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 7 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
	}),
	getHeadElement = memoize(function () {
		return document.head || document.getElementsByTagName("head")[0];
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [];

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the bottom of <head>.
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
}

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var head = getHeadElement();
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			head.insertBefore(styleElement, head.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			head.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		head.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	styleElement.type = "text/css";
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	linkElement.rel = "stylesheet";
	insertStyleElement(options, linkElement);
	return linkElement;
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ })
/******/ ]);